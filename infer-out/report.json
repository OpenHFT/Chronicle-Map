[{"bug_type":"THREAD_SAFETY_VIOLATION","qualifier":"Unprotected write. Non-private method `CompiledMapQueryContext$WriteLock.tryLock(...)` indirectly writes to field `this.this$0.contextModCount` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","severity":"WARNING","line":1575,"column":-1,"procedure":"net.openhft.chronicle.map.impl.CompiledMapQueryContext$WriteLock.tryLock(long,java.util.concurrent.TimeUnit):boolean","procedure_start_line":0,"file":"src/main/java/net/openhft/chronicle/map/impl/CompiledMapQueryContext.java","bug_trace":[{"level":0,"filename":"src/main/java/net/openhft/chronicle/map/impl/CompiledMapQueryContext.java","line_number":1575,"column_number":-1,"description":"<Write on unknown thread>"},{"level":0,"filename":"src/main/java/net/openhft/chronicle/map/impl/CompiledMapQueryContext.java","line_number":1575,"column_number":-1,"description":"call to LocalLockState CompiledMapQueryContext.localLockState()"},{"level":1,"filename":"src/main/java/net/openhft/chronicle/map/impl/CompiledMapQueryContext.java","line_number":3681,"column_number":-1,"description":"call to void CompiledMapQueryContext.initLocks()"},{"level":2,"filename":"src/main/java/net/openhft/chronicle/map/impl/CompiledMapQueryContext.java","line_number":3616,"column_number":-1,"description":"call to boolean CompiledMapQueryContext.tryFindInitLocksOfThisSegment(int)"},{"level":3,"filename":"src/main/java/net/openhft/chronicle/map/impl/CompiledMapQueryContext.java","line_number":421,"column_number":-1,"description":"access to `this.this$0.contextModCount`"},{"level":0,"filename":"src/main/java/net/openhft/chronicle/map/impl/CompiledMapQueryContext.java","line_number":1513,"column_number":-1,"description":"<Write on background thread>"},{"level":0,"filename":"src/main/java/net/openhft/chronicle/map/impl/CompiledMapQueryContext.java","line_number":1513,"column_number":-1,"description":"call to LocalLockState CompiledMapQueryContext.localLockState()"},{"level":1,"filename":"src/main/java/net/openhft/chronicle/map/impl/CompiledMapQueryContext.java","line_number":3681,"column_number":-1,"description":"call to void CompiledMapQueryContext.initLocks()"},{"level":2,"filename":"src/main/java/net/openhft/chronicle/map/impl/CompiledMapQueryContext.java","line_number":3616,"column_number":-1,"description":"call to boolean CompiledMapQueryContext.tryFindInitLocksOfThisSegment(int)"},{"level":3,"filename":"src/main/java/net/openhft/chronicle/map/impl/CompiledMapQueryContext.java","line_number":421,"column_number":-1,"description":"access to `this.this$0.contextModCount`"}],"key":"CompiledMapQueryContext.java|tryLock|THREAD_SAFETY_VIOLATION","hash":"bbba70846ac85a664913de10131d6d84","bug_type_hum":"Thread Safety Violation","access":"hJWmvgAAAFoAAAAFAAAAIgAAABmg0JMJSXNyYy9tYWluL2phdmEvbmV0L29wZW5oZnQvY2hyb25pY2xlL21hcC9pbXBsL0NvbXBpbGVkTWFwUXVlcnlDb250ZXh0LmphdmEBAaUA/0AA/6AEBEA="},{"bug_type":"THREAD_SAFETY_VIOLATION","qualifier":"Read/Write race. Non-private method `CompiledMapQueryContext$WriteLock.tryLock(...)` indirectly reads without synchronization from `this.this$0.rootContextInThisThread.iterationContextLockedInThisThread`. Potentially races with write in method `CompiledMapQueryContext$WriteLock.tryLock()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","severity":"WARNING","line":1577,"column":-1,"procedure":"net.openhft.chronicle.map.impl.CompiledMapQueryContext$WriteLock.tryLock(long,java.util.concurrent.TimeUnit):boolean","procedure_start_line":0,"file":"src/main/java/net/openhft/chronicle/map/impl/CompiledMapQueryContext.java","bug_trace":[{"level":0,"filename":"src/main/java/net/openhft/chronicle/map/impl/CompiledMapQueryContext.java","line_number":1577,"column_number":-1,"description":"<Read trace>"},{"level":0,"filename":"src/main/java/net/openhft/chronicle/map/impl/CompiledMapQueryContext.java","line_number":1577,"column_number":-1,"description":"call to void CompiledMapQueryContext.checkIterationContextNotLockedInThisThread()"},{"level":1,"filename":"src/main/java/net/openhft/chronicle/map/impl/CompiledMapQueryContext.java","line_number":3519,"column_number":-1,"description":"access to `this.this$0.rootContextInThisThread.iterationContextLockedInThisThread`"},{"level":0,"filename":"src/main/java/net/openhft/chronicle/map/impl/CompiledMapQueryContext.java","line_number":1520,"column_number":-1,"description":"<Write trace>"},{"level":0,"filename":"src/main/java/net/openhft/chronicle/map/impl/CompiledMapQueryContext.java","line_number":1520,"column_number":-1,"description":"call to void CompiledMapQueryContext.setLocalLockStateGuarded(LocalLockState)"},{"level":1,"filename":"src/main/java/net/openhft/chronicle/map/impl/CompiledMapQueryContext.java","line_number":344,"column_number":-1,"description":"call to void CompiledMapQueryContext.setLocalLockState(LocalLockState)"},{"level":2,"filename":"src/main/java/net/openhft/chronicle/map/impl/CompiledMapQueryContext.java","line_number":1904,"column_number":-1,"description":"call to void CompiledMapQueryContext.deregisterIterationContextLockedInThisThread()"},{"level":3,"filename":"src/main/java/net/openhft/chronicle/map/impl/CompiledMapQueryContext.java","line_number":2381,"column_number":-1,"description":"access to `this.this$0.rootContextInThisThread.iterationContextLockedInThisThread`"}],"key":"CompiledMapQueryContext.java|tryLock|THREAD_SAFETY_VIOLATION","hash":"7aa9299c85161f222025749a699f5f9f","bug_type_hum":"Thread Safety Violation","access":"hJWmvgAAAK0AAAAIAAAAPgAAACyg0JMJSXNyYy9tYWluL2phdmEvbmV0L29wZW5oZnQvY2hyb25pY2xlL21hcC9pbXBsL0NvbXBpbGVkTWFwUXVlcnlDb250ZXh0LmphdmEBDb8A/0AA/6DQkwlJc3JjL21haW4vamF2YS9uZXQvb3BlbmhmdC9jaHJvbmljbGUvbWFwL2ltcGwvQ29tcGlsZWRNYXBRdWVyeUNvbnRleHQuamF2YQEJTQD/QAD/QA=="},{"bug_type":"THREAD_SAFETY_VIOLATION","qualifier":"Unprotected write. Non-private method `CompiledMapQueryContext$WriteLock.tryLock(...)` indirectly writes to field `this.this$0.rootContextInThisThread.iterationContextLockedInThisThread` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","severity":"WARNING","line":1582,"column":-1,"procedure":"net.openhft.chronicle.map.impl.CompiledMapQueryContext$WriteLock.tryLock(long,java.util.concurrent.TimeUnit):boolean","procedure_start_line":0,"file":"src/main/java/net/openhft/chronicle/map/impl/CompiledMapQueryContext.java","bug_trace":[{"level":0,"filename":"src/main/java/net/openhft/chronicle/map/impl/CompiledMapQueryContext.java","line_number":1582,"column_number":-1,"description":"<Write on unknown thread>"},{"level":0,"filename":"src/main/java/net/openhft/chronicle/map/impl/CompiledMapQueryContext.java","line_number":1582,"column_number":-1,"description":"call to void CompiledMapQueryContext.setLocalLockStateGuarded(LocalLockState)"},{"level":1,"filename":"src/main/java/net/openhft/chronicle/map/impl/CompiledMapQueryContext.java","line_number":344,"column_number":-1,"description":"call to void CompiledMapQueryContext.setLocalLockState(LocalLockState)"},{"level":2,"filename":"src/main/java/net/openhft/chronicle/map/impl/CompiledMapQueryContext.java","line_number":1904,"column_number":-1,"description":"call to void CompiledMapQueryContext.deregisterIterationContextLockedInThisThread()"},{"level":3,"filename":"src/main/java/net/openhft/chronicle/map/impl/CompiledMapQueryContext.java","line_number":2381,"column_number":-1,"description":"access to `this.this$0.rootContextInThisThread.iterationContextLockedInThisThread`"},{"level":0,"filename":"src/main/java/net/openhft/chronicle/map/impl/CompiledMapQueryContext.java","line_number":1520,"column_number":-1,"description":"<Write on background thread>"},{"level":0,"filename":"src/main/java/net/openhft/chronicle/map/impl/CompiledMapQueryContext.java","line_number":1520,"column_number":-1,"description":"call to void CompiledMapQueryContext.setLocalLockStateGuarded(LocalLockState)"},{"level":1,"filename":"src/main/java/net/openhft/chronicle/map/impl/CompiledMapQueryContext.java","line_number":344,"column_number":-1,"description":"call to void CompiledMapQueryContext.setLocalLockState(LocalLockState)"},{"level":2,"filename":"src/main/java/net/openhft/chronicle/map/impl/CompiledMapQueryContext.java","line_number":1904,"column_number":-1,"description":"call to void CompiledMapQueryContext.deregisterIterationContextLockedInThisThread()"},{"level":3,"filename":"src/main/java/net/openhft/chronicle/map/impl/CompiledMapQueryContext.java","line_number":2381,"column_number":-1,"description":"access to `this.this$0.rootContextInThisThread.iterationContextLockedInThisThread`"}],"key":"CompiledMapQueryContext.java|tryLock|THREAD_SAFETY_VIOLATION","hash":"79c46267cc2e9916ae1b8ed4371f8e77","bug_type_hum":"Thread Safety Violation","access":"hJWmvgAAAFoAAAAFAAAAIgAAABmg0JMJSXNyYy9tYWluL2phdmEvbmV0L29wZW5oZnQvY2hyb25pY2xlL21hcC9pbXBsL0NvbXBpbGVkTWFwUXVlcnlDb250ZXh0LmphdmEBCU0A/0AA/6AEBEA="},{"bug_type":"THREAD_SAFETY_VIOLATION","qualifier":"Unprotected write. Non-private method `CompiledMapQueryContext$WriteLock.isHeldByCurrentThread()` indirectly writes to field `this.this$0.contextModCount` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","severity":"WARNING","line":1633,"column":-1,"procedure":"net.openhft.chronicle.map.impl.CompiledMapQueryContext$WriteLock.isHeldByCurrentThread():boolean","procedure_start_line":0,"file":"src/main/java/net/openhft/chronicle/map/impl/CompiledMapQueryContext.java","bug_trace":[{"level":0,"filename":"src/main/java/net/openhft/chronicle/map/impl/CompiledMapQueryContext.java","line_number":1633,"column_number":-1,"description":"<Write on unknown thread>"},{"level":0,"filename":"src/main/java/net/openhft/chronicle/map/impl/CompiledMapQueryContext.java","line_number":1633,"column_number":-1,"description":"call to LocalLockState CompiledMapQueryContext.localLockState()"},{"level":1,"filename":"src/main/java/net/openhft/chronicle/map/impl/CompiledMapQueryContext.java","line_number":3681,"column_number":-1,"description":"call to void CompiledMapQueryContext.initLocks()"},{"level":2,"filename":"src/main/java/net/openhft/chronicle/map/impl/CompiledMapQueryContext.java","line_number":3616,"column_number":-1,"description":"call to boolean CompiledMapQueryContext.tryFindInitLocksOfThisSegment(int)"},{"level":3,"filename":"src/main/java/net/openhft/chronicle/map/impl/CompiledMapQueryContext.java","line_number":421,"column_number":-1,"description":"access to `this.this$0.contextModCount`"},{"level":0,"filename":"src/main/java/net/openhft/chronicle/map/impl/CompiledMapQueryContext.java","line_number":1513,"column_number":-1,"description":"<Write on background thread>"},{"level":0,"filename":"src/main/java/net/openhft/chronicle/map/impl/CompiledMapQueryContext.java","line_number":1513,"column_number":-1,"description":"call to LocalLockState CompiledMapQueryContext.localLockState()"},{"level":1,"filename":"src/main/java/net/openhft/chronicle/map/impl/CompiledMapQueryContext.java","line_number":3681,"column_number":-1,"description":"call to void CompiledMapQueryContext.initLocks()"},{"level":2,"filename":"src/main/java/net/openhft/chronicle/map/impl/CompiledMapQueryContext.java","line_number":3616,"column_number":-1,"description":"call to boolean CompiledMapQueryContext.tryFindInitLocksOfThisSegment(int)"},{"level":3,"filename":"src/main/java/net/openhft/chronicle/map/impl/CompiledMapQueryContext.java","line_number":421,"column_number":-1,"description":"access to `this.this$0.contextModCount`"}],"key":"CompiledMapQueryContext.java|isHeldByCurrentThread|THREAD_SAFETY_VIOLATION","hash":"792cd10d742652972922962afbe9c004","bug_type_hum":"Thread Safety Violation","access":"hJWmvgAAAFoAAAAFAAAAIgAAABmg0JMJSXNyYy9tYWluL2phdmEvbmV0L29wZW5oZnQvY2hyb25pY2xlL21hcC9pbXBsL0NvbXBpbGVkTWFwUXVlcnlDb250ZXh0LmphdmEBAaUA/0AA/6AEBEA="},{"bug_type":"THREAD_SAFETY_VIOLATION","qualifier":"Unprotected write. Non-private method `CompiledMapQueryContext$WriteLock.lockInterruptibly()` indirectly writes to field `this.this$0.contextModCount` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","severity":"WARNING","line":1642,"column":-1,"procedure":"net.openhft.chronicle.map.impl.CompiledMapQueryContext$WriteLock.lockInterruptibly():void","procedure_start_line":0,"file":"src/main/java/net/openhft/chronicle/map/impl/CompiledMapQueryContext.java","bug_trace":[{"level":0,"filename":"src/main/java/net/openhft/chronicle/map/impl/CompiledMapQueryContext.java","line_number":1642,"column_number":-1,"description":"<Write on unknown thread>"},{"level":0,"filename":"src/main/java/net/openhft/chronicle/map/impl/CompiledMapQueryContext.java","line_number":1642,"column_number":-1,"description":"call to LocalLockState CompiledMapQueryContext.localLockState()"},{"level":1,"filename":"src/main/java/net/openhft/chronicle/map/impl/CompiledMapQueryContext.java","line_number":3681,"column_number":-1,"description":"call to void CompiledMapQueryContext.initLocks()"},{"level":2,"filename":"src/main/java/net/openhft/chronicle/map/impl/CompiledMapQueryContext.java","line_number":3616,"column_number":-1,"description":"call to boolean CompiledMapQueryContext.tryFindInitLocksOfThisSegment(int)"},{"level":3,"filename":"src/main/java/net/openhft/chronicle/map/impl/CompiledMapQueryContext.java","line_number":421,"column_number":-1,"description":"access to `this.this$0.contextModCount`"},{"level":0,"filename":"src/main/java/net/openhft/chronicle/map/impl/CompiledMapQueryContext.java","line_number":1513,"column_number":-1,"description":"<Write on background thread>"},{"level":0,"filename":"src/main/java/net/openhft/chronicle/map/impl/CompiledMapQueryContext.java","line_number":1513,"column_number":-1,"description":"call to LocalLockState CompiledMapQueryContext.localLockState()"},{"level":1,"filename":"src/main/java/net/openhft/chronicle/map/impl/CompiledMapQueryContext.java","line_number":3681,"column_number":-1,"description":"call to void CompiledMapQueryContext.initLocks()"},{"level":2,"filename":"src/main/java/net/openhft/chronicle/map/impl/CompiledMapQueryContext.java","line_number":3616,"column_number":-1,"description":"call to boolean CompiledMapQueryContext.tryFindInitLocksOfThisSegment(int)"},{"level":3,"filename":"src/main/java/net/openhft/chronicle/map/impl/CompiledMapQueryContext.java","line_number":421,"column_number":-1,"description":"access to `this.this$0.contextModCount`"}],"key":"CompiledMapQueryContext.java|lockInterruptibly|THREAD_SAFETY_VIOLATION","hash":"5365c47ac262284561e7d7517ae94b3d","bug_type_hum":"Thread Safety Violation","access":"hJWmvgAAAFoAAAAFAAAAIgAAABmg0JMJSXNyYy9tYWluL2phdmEvbmV0L29wZW5oZnQvY2hyb25pY2xlL21hcC9pbXBsL0NvbXBpbGVkTWFwUXVlcnlDb250ZXh0LmphdmEBAaUA/0AA/6AEBEA="},{"bug_type":"THREAD_SAFETY_VIOLATION","qualifier":"Read/Write race. Non-private method `CompiledMapQueryContext$WriteLock.lockInterruptibly()` indirectly reads without synchronization from `this.this$0.rootContextInThisThread.iterationContextLockedInThisThread`. Potentially races with write in method `CompiledMapQueryContext$WriteLock.tryLock()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","severity":"WARNING","line":1644,"column":-1,"procedure":"net.openhft.chronicle.map.impl.CompiledMapQueryContext$WriteLock.lockInterruptibly():void","procedure_start_line":0,"file":"src/main/java/net/openhft/chronicle/map/impl/CompiledMapQueryContext.java","bug_trace":[{"level":0,"filename":"src/main/java/net/openhft/chronicle/map/impl/CompiledMapQueryContext.java","line_number":1644,"column_number":-1,"description":"<Read trace>"},{"level":0,"filename":"src/main/java/net/openhft/chronicle/map/impl/CompiledMapQueryContext.java","line_number":1644,"column_number":-1,"description":"call to void CompiledMapQueryContext.checkIterationContextNotLockedInThisThread()"},{"level":1,"filename":"src/main/java/net/openhft/chronicle/map/impl/CompiledMapQueryContext.java","line_number":3519,"column_number":-1,"description":"access to `this.this$0.rootContextInThisThread.iterationContextLockedInThisThread`"},{"level":0,"filename":"src/main/java/net/openhft/chronicle/map/impl/CompiledMapQueryContext.java","line_number":1520,"column_number":-1,"description":"<Write trace>"},{"level":0,"filename":"src/main/java/net/openhft/chronicle/map/impl/CompiledMapQueryContext.java","line_number":1520,"column_number":-1,"description":"call to void CompiledMapQueryContext.setLocalLockStateGuarded(LocalLockState)"},{"level":1,"filename":"src/main/java/net/openhft/chronicle/map/impl/CompiledMapQueryContext.java","line_number":344,"column_number":-1,"description":"call to void CompiledMapQueryContext.setLocalLockState(LocalLockState)"},{"level":2,"filename":"src/main/java/net/openhft/chronicle/map/impl/CompiledMapQueryContext.java","line_number":1904,"column_number":-1,"description":"call to void CompiledMapQueryContext.deregisterIterationContextLockedInThisThread()"},{"level":3,"filename":"src/main/java/net/openhft/chronicle/map/impl/CompiledMapQueryContext.java","line_number":2381,"column_number":-1,"description":"access to `this.this$0.rootContextInThisThread.iterationContextLockedInThisThread`"}],"key":"CompiledMapQueryContext.java|lockInterruptibly|THREAD_SAFETY_VIOLATION","hash":"38c93eb970c28e44c955fb696ad01782","bug_type_hum":"Thread Safety Violation","access":"hJWmvgAAAK0AAAAIAAAAPgAAACyg0JMJSXNyYy9tYWluL2phdmEvbmV0L29wZW5oZnQvY2hyb25pY2xlL21hcC9pbXBsL0NvbXBpbGVkTWFwUXVlcnlDb250ZXh0LmphdmEBDb8A/0AA/6DQkwlJc3JjL21haW4vamF2YS9uZXQvb3BlbmhmdC9jaHJvbmljbGUvbWFwL2ltcGwvQ29tcGlsZWRNYXBRdWVyeUNvbnRleHQuamF2YQEJTQD/QAD/QA=="},{"bug_type":"THREAD_SAFETY_VIOLATION","qualifier":"Unprotected write. Non-private method `CompiledMapQueryContext$WriteLock.lockInterruptibly()` indirectly writes to field `this.this$0.rootContextInThisThread.iterationContextLockedInThisThread` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","severity":"WARNING","line":1660,"column":-1,"procedure":"net.openhft.chronicle.map.impl.CompiledMapQueryContext$WriteLock.lockInterruptibly():void","procedure_start_line":0,"file":"src/main/java/net/openhft/chronicle/map/impl/CompiledMapQueryContext.java","bug_trace":[{"level":0,"filename":"src/main/java/net/openhft/chronicle/map/impl/CompiledMapQueryContext.java","line_number":1660,"column_number":-1,"description":"<Write on unknown thread>"},{"level":0,"filename":"src/main/java/net/openhft/chronicle/map/impl/CompiledMapQueryContext.java","line_number":1660,"column_number":-1,"description":"call to void CompiledMapQueryContext.setLocalLockStateGuarded(LocalLockState)"},{"level":1,"filename":"src/main/java/net/openhft/chronicle/map/impl/CompiledMapQueryContext.java","line_number":344,"column_number":-1,"description":"call to void CompiledMapQueryContext.setLocalLockState(LocalLockState)"},{"level":2,"filename":"src/main/java/net/openhft/chronicle/map/impl/CompiledMapQueryContext.java","line_number":1904,"column_number":-1,"description":"call to void CompiledMapQueryContext.deregisterIterationContextLockedInThisThread()"},{"level":3,"filename":"src/main/java/net/openhft/chronicle/map/impl/CompiledMapQueryContext.java","line_number":2381,"column_number":-1,"description":"access to `this.this$0.rootContextInThisThread.iterationContextLockedInThisThread`"},{"level":0,"filename":"src/main/java/net/openhft/chronicle/map/impl/CompiledMapQueryContext.java","line_number":1520,"column_number":-1,"description":"<Write on background thread>"},{"level":0,"filename":"src/main/java/net/openhft/chronicle/map/impl/CompiledMapQueryContext.java","line_number":1520,"column_number":-1,"description":"call to void CompiledMapQueryContext.setLocalLockStateGuarded(LocalLockState)"},{"level":1,"filename":"src/main/java/net/openhft/chronicle/map/impl/CompiledMapQueryContext.java","line_number":344,"column_number":-1,"description":"call to void CompiledMapQueryContext.setLocalLockState(LocalLockState)"},{"level":2,"filename":"src/main/java/net/openhft/chronicle/map/impl/CompiledMapQueryContext.java","line_number":1904,"column_number":-1,"description":"call to void CompiledMapQueryContext.deregisterIterationContextLockedInThisThread()"},{"level":3,"filename":"src/main/java/net/openhft/chronicle/map/impl/CompiledMapQueryContext.java","line_number":2381,"column_number":-1,"description":"access to `this.this$0.rootContextInThisThread.iterationContextLockedInThisThread`"}],"key":"CompiledMapQueryContext.java|lockInterruptibly|THREAD_SAFETY_VIOLATION","hash":"e5fcc3309689174a9f95df13da60c91f","bug_type_hum":"Thread Safety Violation","access":"hJWmvgAAAFoAAAAFAAAAIgAAABmg0JMJSXNyYy9tYWluL2phdmEvbmV0L29wZW5oZnQvY2hyb25pY2xlL21hcC9pbXBsL0NvbXBpbGVkTWFwUXVlcnlDb250ZXh0LmphdmEBCU0A/0AA/6AEBEA="},{"bug_type":"THREAD_SAFETY_VIOLATION","qualifier":"Read/Write race. Non-private method `CompiledMapQueryContext$WriteLock.isHeld()` reads without synchronization from `this.this$0.localLockState`. Potentially races with write in method `CompiledMapQueryContext$WriteLock.tryLock()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.","severity":"WARNING","line":1741,"column":-1,"procedure":"net.openhft.chronicle.map.impl.CompiledMapQueryContext$WriteLock.isHeld():boolean","procedure_start_line":0,"file":"src/main/java/net/openhft/chronicle/map/impl/CompiledMapQueryContext.java","bug_trace":[{"level":0,"filename":"src/main/java/net/openhft/chronicle/map/impl/CompiledMapQueryContext.java","line_number":1741,"column_number":-1,"description":"<Read trace>"},{"level":0,"filename":"src/main/java/net/openhft/chronicle/map/impl/CompiledMapQueryContext.java","line_number":1741,"column_number":-1,"description":"access to `this.this$0.localLockState`"},{"level":0,"filename":"src/main/java/net/openhft/chronicle/map/impl/CompiledMapQueryContext.java","line_number":1513,"column_number":-1,"description":"<Write trace>"},{"level":0,"filename":"src/main/java/net/openhft/chronicle/map/impl/CompiledMapQueryContext.java","line_number":1513,"column_number":-1,"description":"call to LocalLockState CompiledMapQueryContext.localLockState()"},{"level":1,"filename":"src/main/java/net/openhft/chronicle/map/impl/CompiledMapQueryContext.java","line_number":3681,"column_number":-1,"description":"call to void CompiledMapQueryContext.initLocks()"},{"level":2,"filename":"src/main/java/net/openhft/chronicle/map/impl/CompiledMapQueryContext.java","line_number":3613,"column_number":-1,"description":"access to `this.this$0.localLockState`"}],"key":"CompiledMapQueryContext.java|isHeld|THREAD_SAFETY_VIOLATION","hash":"2c5f445272de5c4b9e2599d769823ec8","bug_type_hum":"Thread Safety Violation","access":"hJWmvgAAAK0AAAAIAAAAPgAAACyg0JMJSXNyYy9tYWluL2phdmEvbmV0L29wZW5oZnQvY2hyb25pY2xlL21hcC9pbXBsL0NvbXBpbGVkTWFwUXVlcnlDb250ZXh0LmphdmEBBs0A/0AA/6DQkwlJc3JjL21haW4vamF2YS9uZXQvb3BlbmhmdC9jaHJvbmljbGUvbWFwL2ltcGwvQ29tcGlsZWRNYXBRdWVyeUNvbnRleHQuamF2YQEOHQD/QAD/QA=="}]
